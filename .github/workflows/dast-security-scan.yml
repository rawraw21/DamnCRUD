name: DAST Security Scan

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Memungkinkan menjalankan workflow secara manual dari UI GitHub

jobs:
  zap-full-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout kode
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: mbstring, intl, pdo_mysql
    
    - name: Setup MySQL
      run: |
        sudo systemctl start mysql
        mysql -e "CREATE DATABASE IF NOT EXISTS damncrud;" -uroot -proot
        mysql -e "CREATE USER IF NOT EXISTS 'damncrud'@'localhost' IDENTIFIED BY 'damncrud123';" -uroot -proot
        mysql -e "GRANT ALL PRIVILEGES ON damncrud.* TO 'damncrud'@'localhost';" -uroot -proot
        mysql -uroot -proot damncrud < db/damncrud.sql
    
    - name: Buat struktur folder untuk laporan dan testing
      run: |
        # Buat direktori untuk laporan
        mkdir -p reports
        mkdir -p zap-reports
        
        # Berikan izin penuh untuk direktori zap-reports
        chmod -R 777 zap-reports
        
        # Buat direktori ss_test jika diperlukan
        mkdir -p ss_test
    
    - name: Setup Apache
      run: |
        sudo apt-get update
        sudo apt-get install apache2 libapache2-mod-php7.4
        sudo a2enmod php7.4
        sudo a2enmod rewrite
        sudo a2enmod headers
        sudo systemctl start apache2
        
        # Siapkan direktori di Apache
        sudo mkdir -p /var/www/html/DamnCRUD
        sudo cp -r $(pwd)/* /var/www/html/DamnCRUD/
        
        # Berikan izin yang benar
        sudo chown -R www-data:www-data /var/www/html/DamnCRUD
        sudo chmod -R 755 /var/www/html/DamnCRUD
        
        # Pastikan .htaccess aktif
        sudo sed -i '/<Directory \/var\/www\/>/,/<\/Directory>/ s/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf
        sudo systemctl reload apache2
        
        # Buat site config khusus
        echo -e "<VirtualHost *:80>\n\tServerName localhost\n\tDocumentRoot /var/www/html\n\t<Directory /var/www/html>\n\t\tOptions Indexes FollowSymLinks MultiViews\n\t\tAllowOverride All\n\t\tRequire all granted\n\t</Directory>\n</VirtualHost>" | sudo tee /etc/apache2/sites-available/000-default.conf
        sudo systemctl reload apache2
        
        # Periksa apakah Apache berfungsi dan folder dapat diakses
        ls -la /var/www/html/DamnCRUD/
        curl -I http://localhost/DamnCRUD/
    
    - name: Sesuaikan koneksi database
      run: |
        sudo sed -i 's/$DATABASE_HOST = .\+/$DATABASE_HOST = "localhost";/' /var/www/html/DamnCRUD/functions.php
        sudo sed -i 's/$DATABASE_USER = .\+/$DATABASE_USER = "damncrud";/' /var/www/html/DamnCRUD/functions.php
        sudo sed -i 's/$DATABASE_PASS = .\+/$DATABASE_PASS = "damncrud123";/' /var/www/html/DamnCRUD/functions.php
        sudo sed -i 's/$DATABASE_NAME = .\+/$DATABASE_NAME = "damncrud";/' /var/www/html/DamnCRUD/functions.php
    
    - name: Verifikasi aplikasi berjalan
      run: |
        # Verifikasi Apache berjalan
        sudo systemctl status apache2
        
        # Cek error log Apache
        sudo tail -n 50 /var/log/apache2/error.log
        
        # Cek akses ke halaman login
        curl -v http://localhost/DamnCRUD/login.php
        
    - name: Setup Docker untuk ZAP
      run: |
        # Gunakan metode instalasi Docker yang disarankan
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh
        sudo systemctl start docker
        sudo systemctl enable docker
        sudo docker pull zaproxy/zap-stable
        sudo docker images
        
    - name: Jalankan OWASP ZAP Baseline Scan (Cepat)
      run: |
        echo "Menjalankan OWASP ZAP Baseline Scan (pemeriksaan dasar)..."
        
        # Jalankan ZAP baseline scan dengan Docker - tanpa menggunakan opsi gen.conf
        sudo docker run --network="host" -v $(pwd)/zap-reports:/zap/wrk:rw --user $(id -u):$(id -g) -t zaproxy/zap-stable zap-baseline.py \
          -t http://localhost/DamnCRUD/ \
          -r baseline-report.html \
          -I \
          -a \
          -j \
          --auto
          
        # Salin laporan untuk keperluan artifact
        cp zap-reports/baseline-report.html reports/
        
        # Buat versi ringkasan markdown
        echo "# Hasil ZAP Baseline Scan" > reports/zap-baseline-summary.md
        echo "Tanggal: $(date)" >> reports/zap-baseline-summary.md
        echo "" >> reports/zap-baseline-summary.md
        echo "ZAP baseline scan selesai. Lihat laporan HTML untuk detail lengkap." >> reports/zap-baseline-summary.md
        
    - name: Jalankan OWASP ZAP API Scan (Mendalam)
      run: |
        echo "Menjalankan OWASP ZAP API Scan (scan mendalam)..."
        
        # Jalankan ZAP API scan dengan Docker - dengan user yang sama dengan host
        sudo docker run --network="host" -v $(pwd)/zap-reports:/zap/wrk:rw --user $(id -u):$(id -g) -t zaproxy/zap-stable zap-api-scan.py \
          -t http://localhost/DamnCRUD/ \
          -f openapi \
          -r api-report.html \
          -x api-report.xml \
          --ajax \
          -I \
          -a \
          -j
        
        # Salin laporan untuk keperluan artifact
        cp zap-reports/api-report.html reports/
        
        # Buat versi ringkasan markdown
        echo "# Hasil ZAP API Scan" > reports/zap-api-summary.md
        echo "Tanggal: $(date)" >> reports/zap-api-summary.md
        echo "" >> reports/zap-api-summary.md
        echo "ZAP API scan selesai. Lihat laporan HTML untuk detail lengkap." >> reports/zap-api-summary.md
        
    - name: Jalankan OWASP ZAP Full Scan (Sangat Mendalam)
      run: |
        echo "Menjalankan OWASP ZAP Full Scan (pemindaian lengkap dan mendalam)..."
        
        # Buat file konfigurasi ZAP
        cat > zap-reports/zap-full-scan.conf << EOF
        # Tambahkan aturan kustom di sini
        # Format: <plugin_id> = <level>
        
        # Level: IGNORE, INFO, WARN, FAIL
        
        # Ignore beberapa aturan yang umum menghasilkan false positives
        10016 = IGNORE    # Missing Anti-clickjacking Header
        10021 = IGNORE    # X-Content-Type-Options Header Missing
        10038 = IGNORE    # Content Security Policy (CSP) Header Not Set
        10049 = IGNORE    # Non-Storable Content
        
        # Tingkatkan beberapa aturan penting
        40012 = FAIL      # Cross Site Scripting (Reflected)
        40014 = FAIL      # Cross Site Scripting (Persistent)
        40018 = FAIL      # SQL Injection
        EOF
        
        # Jalankan ZAP full scan dengan Docker (pemindaian sangat mendalam) - dengan user yang sama dengan host
        sudo docker run --network="host" -v $(pwd)/zap-reports:/zap/wrk:rw --user $(id -u):$(id -g) -t zaproxy/zap-stable zap-full-scan.py \
          -t http://localhost/DamnCRUD/ \
          -r full-scan-report.html \
          -x full-scan-report.xml \
          -c zap-full-scan.conf \
          -a \
          -j \
          --ajax \
          -d \
          -T 10 \
          -m 5 \
          -z "-config attackStrength=HIGH -config attackPersistence=10 -config globalPluginsEnabled=true -config scanner.scanMaxDuration=10"
        
        # Salin laporan untuk keperluan artifact
        cp zap-reports/full-scan-report.html reports/
        
        # Buat versi ringkasan markdown
        echo "# Hasil ZAP Full Scan (Mendalam)" > reports/zap-full-summary.md
        echo "Tanggal: $(date)" >> reports/zap-full-summary.md
        echo "" >> reports/zap-full-summary.md
        echo "ZAP full scan selesai. Pemindaian ini mencakup:" >> reports/zap-full-summary.md
        echo "- Pengujian kerentanan XSS" >> reports/zap-full-summary.md
        echo "- Pengujian kerentanan SQL Injection" >> reports/zap-full-summary.md
        echo "- Pengujian kerentanan CSRF" >> reports/zap-full-summary.md
        echo "- Pengujian kesalahan konfigurasi keamanan" >> reports/zap-full-summary.md
        echo "- Pengujian injeksi kode" >> reports/zap-full-summary.md
        echo "- Dan banyak lagi..." >> reports/zap-full-summary.md
        echo "" >> reports/zap-full-summary.md
        echo "Lihat laporan HTML untuk detail lengkap." >> reports/zap-full-summary.md
    
    - name: Uji Autentikasi Otomatis ZAP
      run: |
        echo "Menjalankan pengujian autentikasi dengan ZAP..."
        
        # Buat file untuk context ZAP
        cat > zap-reports/context.conf << EOF
        <?xml version="1.0" encoding="UTF-8" standalone="no"?>
        <configuration>
            <context>
                <name>DamnCRUD</name>
                <desc>Context for DamnCRUD application</desc>
                <target>http://localhost/DamnCRUD/</target>
                <technology>
                    <include>Php</include>
                    <include>MySql</include>
                </technology>
                <authentication>
                    <method>formBasedAuthentication</method>
                    <form>
                        <loginPageUrl>http://localhost/DamnCRUD/login.php</loginPageUrl>
                        <loginRequestUrl>http://localhost/DamnCRUD/login.php</loginRequestUrl>
                        <loginRequestBody>username={%username%}&password={%password%}</loginRequestBody>
                        <loginIndicator>Howdy, damn</loginIndicator>
                    </form>
                </authentication>
                <user>
                    <name>admin</name>
                    <credentials>
                        <username>admin</username>
                        <password>nimda666!</password>
                    </credentials>
                </user>
            </context>
        </configuration>
        EOF
        
        # Buat file URL untuk ZAP
        cat > zap-reports/urls.txt << EOF
        http://localhost/DamnCRUD/login.php
        http://localhost/DamnCRUD/index.php
        http://localhost/DamnCRUD/create.php
        http://localhost/DamnCRUD/update.php?id=1
        http://localhost/DamnCRUD/profil.php?id=1
        EOF
        
        # Buat skrip ZAP Automation Framework
        cat > zap-reports/zap-auth-scan.yaml << EOF
        env:
          contexts:
            - name: DamnCRUD
              urls:
                - http://localhost/DamnCRUD/
              includePaths:
                - http://localhost/DamnCRUD.*
              authentication:
                method: form
                parameters:
                  loginUrl: http://localhost/DamnCRUD/login.php
                  loginRequestData: username={%username%}&password={%password%}
                  loginPagePath: /login.php
                verification:
                  method: response
                  loggedInRegex: "Howdy, damn"
                  loggedOutRegex: "Damn, wrong credentials!!"
              users:
                - name: admin
                  username: admin
                  password: nimda666!
        
          parameters:
            failOnError: true
            progressToStdout: true
        
        jobs:
          - type: passiveScan-config
            parameters:
              maxAlertsPerRule: 0
          - type: spider
            parameters:
              context: DamnCRUD
              user: admin
              url: http://localhost/DamnCRUD/
              maxDuration: 1
          - type: activeScan
            parameters:
              context: DamnCRUD
              user: admin
              policy: Default Policy
              maxRuleDurationInMins: 1
              maxScanDurationInMins: 5
          - type: report
            parameters:
              template: traditional-html
              reportDir: /zap/wrk/
              reportFile: auth-scan-report.html
              reportTitle: Authentication Scan Report
        EOF
        
        # Jalankan ZAP Authentication Scan dengan Docker - dengan user yang sama dengan host
        sudo docker run --network="host" -v $(pwd)/zap-reports:/zap/wrk:rw --user $(id -u):$(id -g) -t zaproxy/zap-stable zap.sh \
          -cmd \
          -autorun /zap/wrk/zap-auth-scan.yaml
          
        # Salin laporan untuk keperluan artifact jika ada
        if [ -f "auth-scan-report.html" ]; then
          cp auth-scan-report.html reports/
        fi
      
        # Buat versi ringkasan markdown
        echo "# Hasil Pengujian Autentikasi dengan ZAP" > reports/zap-auth-summary.md
        echo "Tanggal: $(date)" >> reports/zap-auth-summary.md
        echo "" >> reports/zap-auth-summary.md
        echo "Pengujian autentikasi aplikasi dengan ZAP selesai. Pemindaian ini mencakup:" >> reports/zap-auth-summary.md
        echo "- Pemindaian sebagai pengguna terotentikasi" >> reports/zap-auth-summary.md
        echo "- Pengujian kerentanan pasca-autentikasi" >> reports/zap-auth-summary.md
        echo "- Pengujian otorisasi dan akses" >> reports/zap-auth-summary.md
        echo "" >> reports/zap-auth-summary.md
        echo "Lihat laporan HTML untuk detail lengkap." >> reports/zap-auth-summary.md
    
    - name: Buat Laporan Gabungan
      run: |
        # Buat laporan gabungan dalam format HTML
        cat > reports/dast-final-report.html << EOF
        <!DOCTYPE html>
        <html>
        <head>
          <title>DAST Security Report - DamnCRUD</title>
          <style>
            body { font-family: Arial, sans-serif; margin: 20px; line-height: 1.6; }
            h1, h2, h3 { color: #333; }
            .container { max-width: 1000px; margin: 0 auto; }
            .warning { color: orange; }
            .critical { color: red; }
            .success { color: green; }
            pre { background: #f5f5f5; padding: 10px; border: 1px solid #ddd; overflow-x: auto; }
            .section { margin-bottom: 30px; padding: 20px; border: 1px solid #ddd; border-radius: 5px; }
            .summary { background-color: #f0f8ff; }
            .report-links a { display: block; margin: 10px 0; }
          </style>
        </head>
        <body>
          <div class="container">
            <h1>DAST Mendalam: Security Report - DamnCRUD</h1>
            <p>Generated on: $(date)</p>
            
            <div class="section summary">
              <h2>Ringkasan Pengujian</h2>
              <p>Pengujian keamanan dinamis (DAST) mendalam dilakukan pada aplikasi DamnCRUD menggunakan OWASP ZAP.</p>
              <h3>Metodologi:</h3>
              <ul>
                <li>ZAP Baseline Scan: Pemindaian dasar konfigurasi keamanan</li>
                <li>ZAP API Scan: Pemindaian API dan endpoint</li>
                <li>ZAP Full Scan: Pemindaian lengkap dengan pengaturan kedalaman tinggi</li>
                <li>ZAP Authentication Scan: Pemindaian sebagai pengguna terotentikasi</li>
              </ul>
            </div>
            
            <div class="section">
              <h2>Link ke Laporan Detail</h2>
              <div class="report-links">
                <a href="baseline-report.html">Laporan ZAP Baseline Scan</a>
                <a href="api-report.html">Laporan ZAP API Scan</a>
                <a href="full-scan-report.html">Laporan ZAP Full Scan</a>
                <a href="auth-scan-report.html">Laporan Pengujian Autentikasi</a>
              </div>
            </div>
            
            <div class="section">
              <h2>Rekomendasi Keamanan</h2>
              <ol>
                <li>Implementasikan HTTPS untuk mengenkripsi semua trafik</li>
                <li>Tambahkan header keamanan seperti X-Frame-Options dan Content-Security-Policy</li>
                <li>Pastikan semua input dari pengguna divalidasi dan disanitasi</li>
                <li>Gunakan prepared statements untuk semua query database</li>
                <li>Terapkan pembatasan izin file yang tepat</li>
                <li>Update semua library dan komponen ke versi terbaru</li>
                <li>Implementasikan perlindungan anti-CSRF di semua form</li>
                <li>Terapkan rate limiting untuk mencegah brute force</li>
                <li>Gunakan autentikasi multi-faktor jika memungkinkan</li>
                <li>Lakukan pengujian keamanan secara berkala</li>
              </ol>
            </div>
          </div>
        </body>
        </html>
        EOF
        
        echo "Laporan gabungan selesai dibuat"
    
    - name: Simpan laporan DAST
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dast-deep-security-reports
        path: reports/ 
